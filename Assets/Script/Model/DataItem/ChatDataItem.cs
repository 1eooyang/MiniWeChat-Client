//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: ChatDataItem.proto
namespace MiniWeChat
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"ChatDataItem")]
  public partial class ChatDataItem : global::ProtoBuf.IExtensible
  {
    public ChatDataItem() {}
    
    private string _sendUserId;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"sendUserId", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string sendUserId
    {
      get { return _sendUserId; }
      set { _sendUserId = value; }
    }
    private string _receiveUserId;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"receiveUserId", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string receiveUserId
    {
      get { return _receiveUserId; }
      set { _receiveUserId = value; }
    }
    private MiniWeChat.ChatDataItem.ChatType _chatType;
    [global::ProtoBuf.ProtoMember(3, IsRequired = true, Name=@"chatType", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public MiniWeChat.ChatDataItem.ChatType chatType
    {
      get { return _chatType; }
      set { _chatType = value; }
    }
    private string _chatBody;
    [global::ProtoBuf.ProtoMember(4, IsRequired = true, Name=@"chatBody", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string chatBody
    {
      get { return _chatBody; }
      set { _chatBody = value; }
    }
    private long _date = default(long);
    [global::ProtoBuf.ProtoMember(5, IsRequired = false, Name=@"date", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(default(long))]
    public long date
    {
      get { return _date; }
      set { _date = value; }
    }
    private bool _isRead = (bool)false;
    [global::ProtoBuf.ProtoMember(6, IsRequired = false, Name=@"isRead", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue((bool)false)]
    public bool isRead
    {
      get { return _isRead; }
      set { _isRead = value; }
    }
    private bool _isSend = (bool)false;
    [global::ProtoBuf.ProtoMember(7, IsRequired = false, Name=@"isSend", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue((bool)false)]
    public bool isSend
    {
      get { return _isSend; }
      set { _isSend = value; }
    }
    private MiniWeChat.ChatDataItem.TargetType _targetType = MiniWeChat.ChatDataItem.TargetType.INDIVIDUAL;
    [global::ProtoBuf.ProtoMember(8, IsRequired = false, Name=@"targetType", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(MiniWeChat.ChatDataItem.TargetType.INDIVIDUAL)]
    public MiniWeChat.ChatDataItem.TargetType targetType
    {
      get { return _targetType; }
      set { _targetType = value; }
    }
    [global::ProtoBuf.ProtoContract(Name=@"TargetType")]
    public enum TargetType
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"INDIVIDUAL", Value=0)]
      INDIVIDUAL = 0,
            
      [global::ProtoBuf.ProtoEnum(Name=@"GROUP", Value=1)]
      GROUP = 1,
            
      [global::ProtoBuf.ProtoEnum(Name=@"SYSTEM", Value=2)]
      SYSTEM = 2
    }
  
    [global::ProtoBuf.ProtoContract(Name=@"ChatType")]
    public enum ChatType
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"TEXT", Value=0)]
      TEXT = 0,
            
      [global::ProtoBuf.ProtoEnum(Name=@"IMAGE", Value=1)]
      IMAGE = 1
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}