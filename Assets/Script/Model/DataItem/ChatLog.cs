//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: ChatLog.proto
// Note: requires additional types generated from: ChatDataItem.proto
namespace MiniWeChat
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"ChatLog")]
  public partial class ChatLog : global::ProtoBuf.IExtensible
  {
    public ChatLog() {}
    
    private string _userId;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"userId", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string userId
    {
      get { return _userId; }
      set { _userId = value; }
    }
    private long _date;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"date", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public long date
    {
      get { return _date; }
      set { _date = value; }
    }
    private readonly global::System.Collections.Generic.List<MiniWeChat.ChatDataItem> _itemList = new global::System.Collections.Generic.List<MiniWeChat.ChatDataItem>();
    [global::ProtoBuf.ProtoMember(3, Name=@"itemList", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<MiniWeChat.ChatDataItem> itemList
    {
      get { return _itemList; }
    }
  
    private MiniWeChat.ChatDataItem.TargetType _targetType = MiniWeChat.ChatDataItem.TargetType.INDIVIDUAL;
    [global::ProtoBuf.ProtoMember(4, IsRequired = false, Name=@"targetType", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(MiniWeChat.ChatDataItem.TargetType.INDIVIDUAL)]
    public MiniWeChat.ChatDataItem.TargetType targetType
    {
      get { return _targetType; }
      set { _targetType = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}